{"ast":null,"code":"var _jsxFileName = \"/home/ingrid/Documentos/testFullStack/frontEnd/src/components/graph/graph.js\";\n// Importando o React\nimport React, { Component } from \"react\"; // Importando os components necessários da lib react-materialize\n\nimport { Row } from 'react-materialize';\nimport axios from 'axios';\nimport { Doughnut } from 'react-chartjs-2';\nconst API_URL = 'https://api-fullstackgo.herokuapp.com/api';\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      investments: []\n    };\n  }\n\n  componentDidMount() {\n    const url = `${API_URL}/details/`;\n    axios.get(url).then(response => response.data).then(data => {\n      this.setState({\n        investments: data\n      });\n      console.log(this.state.investments);\n    });\n  }\n\n  render() {\n    const rendFix = \"Renda_Fixa\";\n    const rendVari = \"Renda_Variavel\";\n    let filterFix = this.state.investments.filter(type => {\n      return type.type === rendFix;\n    });\n    let filterVari = this.state.investments.filter(type => {\n      return type.type === rendVari;\n    });\n    let rFixa = filterFix.reduce((sum, value) => {\n      return sum + value.value;\n    }, 0);\n    let rVari = filterVari.reduce((sum, value) => {\n      return sum + value.value;\n    }, 0);\n    let tot = rFixa + rVari;\n    this.t = {\n      tot\n    };\n    let perFix = 100 * rFixa / tot;\n    let perVari = 100 * rVari / tot;\n    const graph = {\n      labels: [perFix.toFixed(0) + '% RENDA FIXA', perVari.toFixed(0) + '% RENDA VARIÁVEL'],\n      datasets: [{\n        label: 'Rainfall',\n        backgroundColor: ['#ff595e', '#8ac926'],\n        data: [rFixa, rVari]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col m2 l2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), this.t.tot == 12 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"center-align tit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"ADICIONE UM INVESTIMENTO PARA COME\\xC7AR!\")), !this.t.tot > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m8 l8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Doughnut, {\n      data: graph,\n      options: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            fontColor: '#000',\n            FontFamily: 'Oswald',\n            fontSize: 11,\n            boxWidth: 20\n          }\n        },\n        cutoutPercentage: 75\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col m2 l2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default Contact;","map":{"version":3,"sources":["/home/ingrid/Documentos/testFullStack/frontEnd/src/components/graph/graph.js"],"names":["React","Component","Row","axios","Doughnut","API_URL","Contact","state","investments","componentDidMount","url","get","then","response","data","setState","console","log","render","rendFix","rendVari","filterFix","filter","type","filterVari","rFixa","reduce","sum","value","rVari","tot","t","perFix","perVari","graph","labels","toFixed","datasets","label","backgroundColor","legend","position","fontColor","FontFamily","fontSize","boxWidth","cutoutPercentage"],"mappings":"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","sourcesContent":["// Importando o React\nimport React, {Component} from \"react\";\n// Importando os components necessários da lib react-materialize\nimport { Row} from 'react-materialize'\nimport axios from 'axios';\n\nimport {Doughnut} from 'react-chartjs-2'\n\nconst API_URL = 'https://api-fullstackgo.herokuapp.com/api';\n\nclass Contact  extends Component {\n  state = {\n    investments: []\n  }\n  componentDidMount() {\n    const url = `${API_URL}/details/`;\n    axios.get(url).then(response => response.data)\n    .then((data) => {\n      this.setState({ investments: data })\n      console.log(this.state.investments)\n    });\n  }\n\n  render () {\n\n    const rendFix = \"Renda_Fixa\";\n    const rendVari = \"Renda_Variavel\";\n    let filterFix = this.state.investments.filter((type) => {\n      return type.type === rendFix;\n    });\n    let filterVari = this.state.investments.filter((type) => {\n      return type.type === rendVari;\n    });\n    let rFixa = filterFix.reduce((sum, value) => {\n      return sum + value.value;\n    }, 0);\n    let rVari = filterVari.reduce((sum, value) => {\n      return sum + value.value;\n    }, 0);\n\n    let tot = rFixa + rVari\n\n    this.t ={tot} \n\n    let perFix = (100*rFixa)/tot\n    let perVari = (100*rVari)/tot\n\n    const graph = {\n      labels: [perFix.toFixed(0)+'% RENDA FIXA', perVari.toFixed(0)+'% RENDA VARIÁVEL'],\n      datasets: [\n        {\n          label: 'Rainfall',\n          backgroundColor: [\n            '#ff595e',\n            '#8ac926'\n          ], \n          data: [rFixa, rVari]\n        }\n      ]\n    }   \n  \n    return (\n      <Row>\n        <div class=\"col m2 l2\"></div>\n        {this.t.tot == 12 && \n         <div>\n          <p className=\"center-align tit\">ADICIONE UM INVESTIMENTO PARA COMEÇAR!</p>\n        </div>\n        }\n        {!this.t.tot > 0 && \n          <div className=\"col s12 m8 l8\">\n              <Doughnut\n                data={graph}\n                options={{\n                  legend:{\n                    position:'bottom',\n                    labels:{\n                      fontColor: '#000',\n                      FontFamily: 'Oswald',\n                      fontSize: 11,\n                      boxWidth: 20\n                    }\n                  },\n                  cutoutPercentage:75,\n                }}\n                \n            />\n          </div>\n        }\n        <div class=\"col m2 l2\"></div>\n      </Row>\n    )\n  }\n};\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}