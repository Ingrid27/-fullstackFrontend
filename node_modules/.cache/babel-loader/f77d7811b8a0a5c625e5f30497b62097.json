{"ast":null,"code":"/*eslint no-restricted-globals: 0*/\nimport auth0 from \"auth0-js\";\nconst LOGIN_SUCCESS_PAGE = \"/home\";\nconst LOGIN_FAILURE_PAGE = \"/\";\n\nclass Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: \"dev-vny--4ui.us.auth0.com\",\n      clientID: \"HfXSTmsqkuqCz0IGgLF0Nt4PVUsl9fCt\",\n      redirectUri: \"http://localhost:3000/callback\",\n      audience: \"https://dev-vny--4ui.us.auth0.com/userinfo\",\n      responseType: \"token id_token\",\n      scope: \"openid profile\"\n    });\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResults) => {\n      if (authResults && authResults.accessToken && authResults.idToken) {\n        let expiresAt = JSON.stringify(authResults.expiresIn * 100000 + new Date().getTime());\n        localStorage.setItem(\"access_token\", authResults.accessToken);\n        localStorage.setItem(\"id_token\", authResults.idToken);\n        localStorage.setItem(\"experies_at\", expiresAt);\n        location.hash = \"\";\n        location.pathname = LOGIN_SUCCESS_PAGE;\n      } else if (err) {\n        location.pathname = LOGIN_FAILURE_PAGE;\n        console.log(err);\n      }\n    });\n  }\n\n  isAuthenticated() {\n    let expiresAt = JSON.parse(localStorage.getItem(\"experies_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"experies_at\");\n    location.pathname = LOGIN_FAILURE_PAGE;\n  }\n\n  getProfile() {\n    if (localStorage.getItem(\"id_token\")) {\n      return;\n    }\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/home/ingrid/Documentos/testFullStack/frontEnd/src/Auth.js"],"names":["auth0","LOGIN_SUCCESS_PAGE","LOGIN_FAILURE_PAGE","Auth","constructor","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","login","bind","authorize","handleAuthentication","parseHash","err","authResults","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","location","hash","pathname","console","log","isAuthenticated","parse","getItem","logout","removeItem","getProfile"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAG,OAA3B;AACA,MAAMC,kBAAkB,GAAG,GAA3B;;AAEA,MAAMC,IAAN,CAAW;AAUPC,EAAAA,WAAW,GAAG;AAAA,SATdJ,KASc,GATN,IAAIA,KAAK,CAACK,OAAV,CAAkB;AACtBC,MAAAA,MAAM,EAAC,2BADe;AAEtBC,MAAAA,QAAQ,EAAC,kCAFa;AAGtBC,MAAAA,WAAW,EAAC,gCAHU;AAItBC,MAAAA,QAAQ,EAAC,4CAJa;AAKtBC,MAAAA,YAAY,EAAE,gBALQ;AAMtBC,MAAAA,KAAK,EAAE;AANe,KAAlB,CASM;AACV,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH;;AAEDD,EAAAA,KAAK,GAAE;AACJ,SAAKZ,KAAL,CAAWc,SAAX;AACF;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKf,KAAL,CAAWgB,SAAX,CAAqB,CAACC,GAAD,EAAMC,WAAN,KAAsB;AACvC,UAAIA,WAAW,IAAIA,WAAW,CAACC,WAA3B,IAA0CD,WAAW,CAACE,OAA1D,EAAmE;AAC/D,YAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAgBL,WAAW,CAACM,SAAb,GAAyB,MAAzB,GAAkC,IAAIC,IAAJ,GAAWC,OAAX,EAAjD,CAAhB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCV,WAAW,CAACC,WAAjD;AACAQ,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCV,WAAW,CAACE,OAA7C;AACAO,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCP,SAApC;AACAQ,QAAAA,QAAQ,CAACC,IAAT,GAAgB,EAAhB;AACAD,QAAAA,QAAQ,CAACE,QAAT,GAAoB9B,kBAApB;AACH,OAPD,MAOO,IAAIgB,GAAJ,EAAS;AACZY,QAAAA,QAAQ,CAACE,QAAT,GAAoB7B,kBAApB;AACA8B,QAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACH;AACJ,KAZD;AAaH;;AAEDiB,EAAAA,eAAe,GAAG;AACd,QAAIb,SAAS,GAAGC,IAAI,CAACa,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqB,aAArB,CAAX,CAAhB;AACA,WAAO,IAAIX,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACLV,IAAAA,YAAY,CAACW,UAAb,CAAwB,cAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,aAAxB;AACAT,IAAAA,QAAQ,CAACE,QAAT,GAAoB7B,kBAApB;AACH;;AACDqC,EAAAA,UAAU,GAAG;AACT,QAAIZ,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AAClC;AACH;AACJ;;AAjDM;;AAqDX,eAAejC,IAAf","sourcesContent":["/*eslint no-restricted-globals: 0*/\n\nimport auth0 from \"auth0-js\";\n\nconst LOGIN_SUCCESS_PAGE = \"/home\";\nconst LOGIN_FAILURE_PAGE = \"/\";\n\nclass Auth {\n    auth0 = new auth0.WebAuth({\n        domain:\"dev-vny--4ui.us.auth0.com\",\n        clientID:\"HfXSTmsqkuqCz0IGgLF0Nt4PVUsl9fCt\",\n        redirectUri:\"http://localhost:3000/callback\",\n        audience:\"https://dev-vny--4ui.us.auth0.com/userinfo\",\n        responseType: \"token id_token\",\n        scope: \"openid profile\"\n    });\n\n    constructor() {\n        this.login = this.login.bind(this);\n    }\n\n    login(){\n       this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        this.auth0.parseHash((err, authResults) => {\n            if (authResults && authResults.accessToken && authResults.idToken) {\n                let expiresAt = JSON.stringify((authResults.expiresIn) *100000 + new Date().getTime());\n                localStorage.setItem(\"access_token\", authResults.accessToken);\n                localStorage.setItem(\"id_token\", authResults.idToken);\n                localStorage.setItem(\"experies_at\", expiresAt);\n                location.hash = \"\";\n                location.pathname = LOGIN_SUCCESS_PAGE;\n            } else if (err) {\n                location.pathname = LOGIN_FAILURE_PAGE;\n                console.log(err);\n            }\n        });\n    }\n\n    isAuthenticated() {\n        let expiresAt = JSON.parse(localStorage.getItem(\"experies_at\"));\n        return new Date().getTime() < expiresAt;\n    }\n\n    logout (){\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"id_token\");\n        localStorage.removeItem(\"experies_at\");\n        location.pathname = LOGIN_FAILURE_PAGE;\n    }\n    getProfile() {\n        if (localStorage.getItem(\"id_token\")) {\n            return\n        }\n    }\n\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}